# Generated by Django 5.1 on 2024-08-13 12:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('node_type', models.CharField(choices=[('condition', 'Condition'), ('action', 'Action'), ('trigger', 'Trigger'), ('http', 'HTTP'), ('delay', 'Delay'), ('integration', 'Integration')], max_length=50)),
            ],
            options={
                'db_table': 'nodes',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('verified_email', models.BooleanField(default=False)),
                ('email_marketing_consent', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('int', 'Integer'), ('string', 'String'), ('datetime', 'Datetime')], max_length=20)),
            ],
            options={
                'db_table': 'fields',
            },
        ),
        migrations.CreateModel(
            name='Integrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('config_file_path', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'integrators',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('shop_id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255)),
            ],
            options={
                'db_table': 'shops',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'templates',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=255)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='WebhookSubscribed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webhook_topic', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'webhooks_subscribed',
            },
        ),
        migrations.CreateModel(
            name='DelayNode',
            fields=[
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cross_sell.node')),
                ('delay_period', models.IntegerField()),
            ],
            options={
                'db_table': 'delay_nodes',
            },
        ),
        migrations.CreateModel(
            name='HttpNode',
            fields=[
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cross_sell.node')),
                ('http_method', models.CharField(max_length=10)),
                ('http_url', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'http_nodes',
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_edges', to='cross_sell.node')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_edges', to='cross_sell.node')),
            ],
            options={
                'db_table': 'edges',
            },
        ),
        migrations.CreateModel(
            name='NodeFieldMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.field')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.node')),
            ],
            options={
                'db_table': 'nodes_fields_mapping',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('order_id', models.IntegerField(primary_key=True, serialize=False)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payload', models.JSONField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='cross_sell.customer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='cross_sell.product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='cross_sell.shop')),
            ],
            options={
                'db_table': 'orders',
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='cross_sell.shop'),
        ),
        migrations.CreateModel(
            name='TemplateShopMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.shop')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.template')),
            ],
            options={
                'db_table': 'templates_shop_mapping',
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('webhook_id', models.IntegerField()),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.user')),
            ],
            options={
                'db_table': 'workflow',
            },
        ),
        migrations.AddField(
            model_name='node',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='cross_sell.workflow'),
        ),
        migrations.CreateModel(
            name='WorkflowExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('PAUSE', 'Pause'), ('COMPLETE', 'Complete'), ('RETRY', 'Retry')], max_length=50)),
                ('retry', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('FAILED', 'Failed'), ('SUCCESS', 'Success'), ('RUNNING', 'Running')], max_length=50)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('curr_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='current_node_workflows', to='cross_sell.node')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workflow', to='cross_sell.workflow')),
            ],
            options={
                'db_table': 'workflow_execution',
            },
        ),
        migrations.CreateModel(
            name='NodeExecution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('NEW', 'New'), ('IN_PROGRESS', 'In Progress'), ('PAUSE', 'Pause'), ('COMPLETE', 'Complete'), ('RETRY', 'Retry')], max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('retry', models.BooleanField(default=False)),
                ('next_node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_node_executions', to='cross_sell.node')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.node')),
                ('wf_exec_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.workflowexecution')),
            ],
            options={
                'db_table': 'node_execution',
            },
        ),
        migrations.CreateModel(
            name='ConditionNode',
            fields=[
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cross_sell.node')),
                ('condition_type', models.CharField(choices=[('if', 'If'), ('switch', 'Switch'), ('if-elseif', 'If-Elseif')], max_length=20)),
                ('sequence', models.IntegerField()),
                ('operator', models.CharField(choices=[('=', 'Equal'), ('<', 'Less Than'), ('>', 'Greater Than'), ('<=', 'Less Than or Equal'), ('>=', 'Greater Than or Equal')], max_length=30)),
                ('right_operand', models.CharField(blank=True, max_length=255, null=True)),
                ('left_operand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='left_operand', to='cross_sell.field')),
            ],
            options={
                'db_table': 'condition_nodes',
            },
        ),
        migrations.CreateModel(
            name='ConditionNodeMapping',
            fields=[
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cross_sell.node')),
                ('eval', models.BooleanField()),
                ('next_node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_node', to='cross_sell.node')),
            ],
            options={
                'db_table': 'condition_node_mapping',
            },
        ),
        migrations.CreateModel(
            name='IntegratorNode',
            fields=[
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='cross_sell.node')),
                ('context', models.JSONField(blank=True, null=True)),
                ('integrator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cross_sell.integrator')),
            ],
            options={
                'db_table': 'integrator_nodes',
            },
        ),
    ]
